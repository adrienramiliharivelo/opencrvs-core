# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.

name: Lint and run unit tests

on: [pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of packages
        id: set-matrix
        run: |
          PACKAGES=$(ls -d packages/* | jq -R -s -c 'split("\n")[:-1]')
          echo "Found packages: $PACKAGES"
          echo "::set-output name=matrix::${PACKAGES}"

  test:
    needs: setup
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.setup.outputs.matrix)}}

    steps:
      - name: Checking out git repo
        uses: actions/checkout@v2

      - name: Check package.json and scripts
        id: check-scripts
        run: |
          if [ ! -f "${{ matrix.package }}/package.json" ]; then
            echo "No package.json found for ${{ matrix.package }}. Stopping pipeline."
            echo "::set-output name=skip::true"
          elif ! grep -q "\"test\":" "${{ matrix.package }}/package.json" || ! grep -q "\"lint\":" "${{ matrix.package }}/package.json"; then
            echo "Both or one of the test and lint scripts not found in ${{ matrix.package }}. Stopping pipeline."
            echo "::set-output name=skip::true"
          else
            echo "::set-output name=skip::false"
          fi

      - name: Use Node.js ${{ matrix.node-version }}
        if: steps.check-scripts.outputs.skip != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Remove other package directories
        if: steps.check-scripts.outputs.skip != 'true'
        run: |
          for dir in packages/*; do
            if [ "$dir" != "${{ matrix.package }}" ] && [ "$dir" != "packages/commons" ] && [ "$dir" != "packages/components" ]; then
              echo "Removing $dir"
              rm -rf "$dir"
            fi
          done

      - name: Runs dependency installation
        if: steps.check-scripts.outputs.skip != 'true'
        run: CI="" yarn

      - name: Build common package
        if: steps.check-scripts.outputs.skip != 'true'
        run: cd packages/common && yarn build

     - name: Build components client and login
        run: |
          if [[ "${{ matrix.package }}" == "packages/client" || "${{ matrix.package }}" == "packages/login" ]]; then
            cd packages/components && yarn build
          fi

      - name: Run linting
        if: steps.check-scripts.outputs.skip != 'true'
        run: cd ${{ matrix.package }} && yarn lint

      - name: Run Unit Test
        if: steps.check-scripts.outputs.skip != 'true'
        run: cd ${{ matrix.package }} && yarn test
